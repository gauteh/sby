[package]
name = "sfy"
edition = "2021"
version = "0.1.0"
authors = [ "Gaute Hope <gauteh@met.no>" ]

[[bin]]
name = "sfypack"
path = "src/bin/sfypack.rs"
required-features = [ "build-bin", "raw" ]

[workspace]
members = [ "target-test", "sfy-artemis" ]

[dependencies]
base64 = { version = "0.13.0", default-features = false }
defmt = "0.3"
bytemuck = "1.7.2"
heapless = { version = "0.7", features = [ "serde", "ufmt-impl", "defmt-impl" ] }
embedded-sdmmc = { version = "0.4.0", default-features = false, features = ["defmt-log"] }
postcard = { version = "1.0.1", features = [ "experimental-derive" ]}
serde = { version = "1", features = ["derive"], default-features = false }
serde-json-core = { version = "0.4", optional = true }
serde_json = { version = "1", optional = true }
embedded-hal = "0.2.6"
cortex-m = "*"
ism330dhcx = { git = "https://github.com/stianvikanes/ism330dhcx", branch = "CTRL10-register-trying" }
#ism330dhcx = "0.4.0"
static_assertions = "1"
chrono = { version = "0.4.19", default-features = false }
micromath = { version = "2", features = [ "quaternion", "vector" ] }
libm = { version = "0.2", features = [ "unstable" ] }
rtcc = "0.3.0"
anyhow = { version = "1", optional = true }
argh = { version = "*", optional = true }

[dependencies.ahrs-fusion]
git = "https://github.com/gauteh/ahrs-fusion"

[dependencies.blues-notecard]
git = "https://github.com/gauteh/notecard-rs"

[dev-dependencies]
half = { version = "1.8.2", features = [ "use-intrinsics", "bytemuck", "serde" ] }

[features]
continuous = []
20Hz = [ 'fir' ]
raw = [ "storage" ]
fir = []
storage = []
target-test = [ "storage" ]
build-bin = [ "storage", "raw", "anyhow", "argh", "serde-json-core/std", "serde_json", "chrono/std" ]
default = [ "build-bin" ]

[patch.crates-io]
ism330dhcx = { git = "https://github.com/stianvikanes/ism330dhcx", branch = "CTRL10-register-trying" }
# ism330dhcx = { path = "../../../../dev/embedded/imu/ism330dhcx" }
cmsis_dsp = { git = "https://github.com/samcrow/cmsis_dsp.rs" }
# embedded-sdmmc = { git = "https://github.com/rust-embedded-community/embedded-sdmmc-rs", branch = "develop" }
embedded-sdmmc = { git = "https://github.com/gauteh/embedded-sdmmc-rs", branch = "sdmmc-spi-borrow" }
# embedded-sdmmc = { path = "../../../../dev/embedded/embedded-sdmmc-rs" }

# [patch.'https://github.com/gauteh/ahrs-fusion']
# ahrs-fusion = { path = "../../../../dev/embedded/imu/ahrs-fusion" }

# [patch.'https://github.com/gauteh/notecard-rs']
# blues-notecard = { path = "../../../../dev/embedded/notecard-rs" }

# [patch.'https://github.com/gauteh/ambiq-rs']
# ambiq-hal = { path = "../../../../dev/embedded/ambiq-rs/ambiq-hal" }

# cargo build/run
[profile.dev]
# codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = true
opt-level = 3 # <-
overflow-checks = true # <-

# cargo test
[profile.test]
# codegen-units = 1
debug = 2
debug-assertions = true # <-
# incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-
